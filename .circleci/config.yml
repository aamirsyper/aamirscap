# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: '2.1'
orbs:
  aws-eks: circleci/aws-eks@2.1
  kubernetes: circleci/kubernetes@1.3
jobs:
  build: 
    docker: 
      # Use the same Docker base as the project
      - image: python:3.7.3-stretch

    working_directory: ~/repo

    steps:
      - checkout

    # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv dockerproj5
            . dockerproj5/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./dockerproj5
          key: v1-dependencies-{{ checksum "requirements.txt" }}

    # run lint!
      - run:
          name: run lint
          command: |
            . dockerproj5/bin/activate
            make lint 

    # run test!
      - run:
          name: run test
          command: |
            . dockerproj5/bin/activate
            py.test 

  Build-Docker-image-and-push:
    machine: true
    steps:
      - checkout
      - run:
          name: Docker Image - Build
          command: |
            docker build --tag=aamirscap .
      - run:
          name: Docker Image - List
          command: |
            docker image ls
      - run:
          name: Authenticate Docker Hub Login and also push the docker image to docker hub repository
          command: |
            docker login -u="${DOCKER_LOGIN}" -p="${DOCKER_PASS}"
            echo 'Welcome to DockerHub!!!'

            TAG=aamirscap
            dockerpath=aamirsyper/aamirscap

            docker tag $TAG $dockerpath
            docker push $dockerpath
            echo 'Docker Image pushed to Docker hub : $dockerpath'

  create-deployment:
    docker:
      - image: 'cimg/python:3.10'
    parameters:
      cluster-name:
        description: |
          aamirscap
        type: string
    steps:
      - checkout
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          resource-file-path: .circleci/files/resourcesetup.yml
          resource-name: deployment/aamirscap
          get-rollout-status: true
      - kubernetes/create-or-update-resource:
          resource-file-path: ".circleci/files/networksetup.yml"

workflows:
    default:
      jobs:
         - build
         - Build-Docker-image-and-push:
              requires: 
                - build          
         - aws-eks/create-cluster:
              cluster-name: aamirscap
              requires: 
                - Build-Docker-image-and-push
         - create-deployment:
              cluster-name: aamirscap
              requires:
                - build
                - Build-Docker-image-and-push
                - aws-eks/create-cluster           
       